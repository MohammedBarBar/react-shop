{"version":3,"sources":["images/logo1.png","components/Navbar.js","components/NotFound.js","components/actions/cartActions.js","components/Home.js","components/order.js","components/Cart.js","components/category.jsx","components/Main.js","components/MyInput.js","components/addOrder.js","components/login.js","components/Admin.js","components/addProduct.js","components/addCategory.js","App.js","reportWebVitals.js","components/reducers/cartReducer.js","index.js"],"names":["Navbar","className","to","src","Logo","alt","NotFound","addTotalPrice","data","type","addtoAddedItems","Home","state","prod","category","catName","categoriesName","idCategories","catSelected","id","isLoaded","handleClick","props","addToCart","namep","items","find","item","idProducts","toast","success","ProductsName","handelAdd","addtoItems","handelTotalPrice","handelAddedItems","a","added","JSON","parse","localStorage","getItem","price","console","log","axios","get","config","ProductApi","prods","CategoryApi","cat","this","setState","setItem","stringify","addedITEMS","totalPrice","match","params","selected","itemList","filter","CategorName","map","Image","onClick","autoClose","length","Component","connect","addedItems","total","dispatch","order","handleChecked","e","target","checked","addShipping","substractShipping","orderItems","shipping","createRef","ref","onChange","Cart","handleRemove","removeItem","handleAddQuantity","addQuantity","handleSubtractQuantity","subtractQuantity","quantity","categor","categories","index","Main","MyInput","name","placeholder","label","error","htmlFor","evt","addOrder","stu","errors","userNameError","emailError","TelError","PassError","usr","Email","Fname","Lname","city","street","password","idUser","Creadit","Tprice","prodId","cartId","creadit","isLodded","handleSubmit","preventDefault","handleChange","value","handleAdd","post","UserApi","CartItemsApi","qun","toString","OrderApi","data1","onSubmit","login","admin","idAdmin","Password","FirstName","LastName","email","pass","window","location","reload","AdminApi","admins","shuffle","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","Admin","AdminID","products","handleOpen","cats","handleLogOut","deleteProd","delete","deleteCat","class","catImage","addProduct","ProNameError","PricelError","ImgError","CatError","product","ProName","image","selectValue","UpdateProduct","CategoryId","handleUpdate","put","upd","disabled","addCategory","categoryee","cName","UpdateCat","App","Fragment","path","component","from","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initState","cartReducer","action","document","getElementById","addedItem","Number","parseInt","existed_item","newTotal","itemToRemove","new_items","store","createStore","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.25c98494.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo1.805136ba.png\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Logo from \"../images/logo1.png\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className=\"nav-wrapper navbar navbar-scroll\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\">\r\n          <img className=\"logo\" src={Logo} alt=\"CompoTech\"></img>\r\n        </Link>\r\n        <Link to=\"/\" className=\"brand-logo\">\r\n          CompoTech\r\n        </Link>\r\n\r\n        <ul className=\"right\">\r\n          <li>\r\n            <Link to=\"/react-shop\">Shop</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/cart\">My cart</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/cart\">\r\n              <span className=\"material-icons\">shopping_cart</span>\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n    return(<h1>Not Found</h1>);\r\n};\r\n\r\nexport default NotFound;\r\n","//add to total price\r\nexport const addTotalPrice= (data)=>({\r\n    type: 'ADD_TO_TOTALPRICE',\r\n     data \r\n});\r\n// add to addedItems initial state\r\nexport const addtoAddedItems= (data)=>({\r\n    type: 'ADD_TO_ADDEDITEMS',\r\n     data \r\n});\r\n// add to items initial state\r\nexport const addtoItems= (data)=>({\r\n    type: 'ADD_TO_ITEMS',\r\n     data \r\n});\r\n// add to cart\r\nexport const addToCart= (id)=>({\r\n        type: 'ADD_TO_CART',\r\n         id \r\n    });\r\n\r\n// remove items\r\nexport const removeItem=(id)=>{\r\n        return{\r\n            type: 'REMOVE_ITEM',\r\n            id\r\n        }\r\n    }\r\n\r\n    //subtract qt action\r\nexport const subtractQuantity=(id)=>{\r\n        return{\r\n            type: 'SUB_QUANTITY',\r\n            id\r\n        }\r\n    }\r\n    //add qt action\r\n    export const addQuantity=(id)=>{\r\n        return{\r\n            type: 'ADD_QUANTITY',\r\n            id\r\n        }\r\n    }\r\n\r\n    // export const setData=()=>{\r\n    //     return{\r\n    //         type: 'Set_Data',\r\n            \r\n    //     }\r\n    // }","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../index.css\";\r\nimport {\r\n  addToCart,\r\n  addtoItems,\r\n  addtoAddedItems,\r\n  addTotalPrice,\r\n} from \"./actions/cartActions\";\r\nimport axios from \"axios\";\r\nimport config from \"../server/config.json\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n// const testData = require(\"../data/data.json\");\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    prod: [],\r\n    category: [],\r\n    catName: {\r\n      categoriesName: \"\",\r\n      idCategories: \"\",\r\n    },\r\n    catSelected: [\r\n      { id: \"1\", category: \"Laptops\" },\r\n      { id: \"2\", category: \"Mouse&Keybord\" },\r\n      { id: \"3\", category: \"HEADSET\" },\r\n    ],\r\n    isLoaded: true,\r\n    id: 0,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    // let data = JSON.parse(localStorage.getItem('cardItem'));\r\n    // console.log(data);\r\n    // if(data.length === 0){\r\n    let added = JSON.parse(localStorage.getItem(\"addedItems\"));\r\n    let price = JSON.parse(localStorage.getItem(\"totalPrice\"));\r\n    console.log(added);\r\n    const { data: prods } = await axios.get(config.ProductApi);\r\n    const { data: cat } = await axios.get(config.CategoryApi);\r\n    this.setState({ category: cat });\r\n    this.handelAdd(prods);\r\n    this.handelAddedItems(added);\r\n    this.handelTotalPrice(price);\r\n    // localStorage.setItem(\"admincheck\",0);\r\n    // localStorage.setItem(\"AdminId\",0);\r\n    // this.setState({ prod: prods });\r\n    // this.setState({ isLoaded: true });\r\n    // // console.log(testData.length);\r\n    // if (testData.length > 0)\r\n    //   for (let index = 0; index < prods.length; index++) {\r\n    //     Array.prototype.pop.apply(testData);\r\n    //   }\r\n    // // testData.push(prods);\r\n    // Array.prototype.push.apply(testData, prods);\r\n    // }\r\n    // else{\r\n    //   this.setState({ prod: data });\r\n    //   this.setState({ isLoaded: true });\r\n    //   if (testData.length > 0)\r\n    //     for (let index = 0; index < data.length; index++) {\r\n    //       Array.prototype.pop.apply(testData);\r\n    //     }\r\n    //   // testData.push(prods);\r\n    //   Array.prototype.push.apply(testData, data);\r\n    // }\r\n  }\r\n\r\n  async componentDidUpdate() {\r\n    // localStorage.setItem('cardItem',JSON.stringify(this.props.items));\r\n    localStorage.setItem(\"addedItems\", JSON.stringify(this.props.addedITEMS));\r\n    localStorage.setItem(\"totalPrice\", JSON.stringify(this.props.totalPrice));\r\n  }\r\n  // console.log(testData);\r\n  //    Object.assign({}, data);\r\n  // var ar = data[0];\r\n  // var arr = ar[0];\r\n  // testData.push(arr);\r\n  //    console.log(testData);\r\n  //    console.log(data);\r\n\r\n  // console.log(this.state.prod);\r\n  // const {data:cat} = await axios.get(config.CategoryApi);\r\n  // this.setState({category:cat});\r\n  // // this.setState({ isLoaded: true });\r\n  // for (let index = 0; index < this.state.prod.length; index++) {\r\n  //     let itemName = this.state.category.find(item=> this.state.prod[index].CategoryId === item.idCategories );\r\n  //     // categoriesName\r\n  //     this.setState({catName:itemName});\r\n  //     this.state.prod[index].CategoryId = this.state.catName.categoriesName;\r\n  //     console.log(this.state.prod[index]);\r\n\r\n  // }\r\n  // console.log(this.state.category);\r\n  // }\r\n\r\n  //   async componentDidUpdate(prevProps) {\r\n  //     if (prevProps.match.params.id !== this.props.match.params.id) {\r\n  //       const { data: prods } = await axios.get(\r\n  //         config.prod + \"?id=\" + this.props.match.params.id\r\n  //       );\r\n  //       this.setState({ prod: prods });\r\n\r\n  //       this.setState({ isLoaded: true });\r\n  //     }\r\n  //   }\r\n\r\n  handleClick = (id) => {\r\n    this.props.addToCart(id);\r\n    let namep = this.props.items.find((item) => item.idProducts === id);\r\n    toast.success(namep.ProductsName + \" Added Successfully to the card\");\r\n  };\r\n  handelAdd = (data) => {\r\n    this.props.addtoItems(data);\r\n  };\r\n  handelTotalPrice = (data) => {\r\n    this.props.addTotalPrice(data);\r\n  };\r\n  handelAddedItems = (data) => {\r\n    this.props.addtoAddedItems(data);\r\n  };\r\n  // getCategoryName =(id)=>{\r\n  //     //   console.log(id);\r\n  //       this.state.catName = id;\r\n  //     //   console.log(this.state.catName);\r\n  //    let itemName =  this.state.category.find(Catname=> Catname.idCategories === id);\r\n  //     this.state.catName = itemName;\r\n  //    console.log(this.state.catName);\r\n  // //    return \"dasd\";\r\n  //   }\r\n\r\n  render() {\r\n    // console.log(this.props);\r\n    // let data = JSON.parse(localStorage.getItem('cardAdded'));\r\n    //     console.log(data);categoriesName\r\n    console.log(this.props.addedITEMS);\r\n    if (this.props.match.params.id) {\r\n      let selected = this.state.category.find(\r\n        (item) => item.idCategories === this.props.match.params.id\r\n      );\r\n      console.log(selected);\r\n      if (selected) {\r\n        let prod = this.props.items.filter(\r\n          (item) => selected.categoriesName === item.CategorName\r\n        );\r\n        let itemList = prod.map((item) => {\r\n          return (\r\n            <div className=\"card\" key={item.idProducts}>\r\n              {/* <ToastContainer></ToastContainer> */}\r\n              <div className=\"card-image\">\r\n                <img src={item.Image} alt={item.ProductsName} />\r\n                {/* <span className=\"card-title\">{item.ProductsName}</span> */}\r\n                <span\r\n                  to=\"/\"\r\n                  className=\"btn-floating halfway-fab waves-effect waves-light blue\"\r\n                  onClick={() => {\r\n                    this.handleClick(item.idProducts);\r\n                  }}\r\n                >\r\n                  <i className=\"material-icons\">add</i>\r\n                </span>\r\n              </div>\r\n              <span className=\"card-title\">{item.ProductsName}</span>\r\n              <div className=\"card-content\">\r\n                <p>Category: {item.CategorName}</p>\r\n                <p>\r\n                  <b>Price: {item.price}$</b>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          );\r\n        });\r\n        return (\r\n          <div className=\"container\">\r\n            <ToastContainer autoClose={1500}></ToastContainer>\r\n            {/* <h3 className=\"center\">Our items</h3> */}\r\n            <div className=\"box\">{itemList}</div>\r\n          </div>\r\n        );\r\n      } else {\r\n        let itemList = [];\r\n        return (\r\n          <div className=\"container\">\r\n            <ToastContainer autoClose={1500}></ToastContainer>\r\n            {/* <h3 className=\"center\">Our items</h3> */}\r\n            <div className=\"box\">{itemList}</div>\r\n          </div>\r\n        );\r\n      }\r\n    } else {\r\n      let itemList = this.props.items.length\r\n        ? this.props.items.map((item) => {\r\n            return (\r\n              <div className=\"card\" key={item.idProducts}>\r\n                {/* <ToastContainer autoClose={1000}></ToastContainer> */}\r\n                <div className=\"card-image\">\r\n                  <img src={item.Image} alt={item.ProductsName} />\r\n                  {/* <span className=\"card-title\">{item.ProductsName}</span> */}\r\n                  <span\r\n                    to=\"/\"\r\n                    className=\"btn-floating halfway-fab waves-effect waves-light blue\"\r\n                    onClick={() => {\r\n                      this.handleClick(item.idProducts);\r\n                    }}\r\n                  >\r\n                    <i className=\"material-icons\">add</i>\r\n                  </span>\r\n                </div>\r\n                <span className=\"card-title\">{item.ProductsName}</span>\r\n                <div className=\"card-content\">\r\n                  <p>Category: {item.CategorName}</p>\r\n                  <p>\r\n                    <b>Price: {item.price}$</b>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            );\r\n          })\r\n        : console.log(\"a\");\r\n      // console.log(itemList);\r\n      return (\r\n        <div className=\"container\">\r\n          <ToastContainer autoClose={1500}></ToastContainer>\r\n          {/* <h3 className=\"center\">Our Products</h3> */}\r\n          <div className=\"box\">{itemList}</div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    items: state.items,\r\n    addedITEMS: state.addedItems,\r\n    totalPrice: state.total,\r\n    //   state.items\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addToCart: (id) => {\r\n      dispatch(addToCart(id));\r\n    },\r\n    addtoItems: (data) => {\r\n      dispatch(addtoItems(data));\r\n    },\r\n    addtoAddedItems: (data) => {\r\n      dispatch(addtoAddedItems(data));\r\n    },\r\n    addTotalPrice: (data) => {\r\n      dispatch(addTotalPrice(data));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import React, { Component, createRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\n// import addOrder from './addOrder';\r\n\r\nimport { addTotalPrice } from \"./actions/cartActions\";\r\nclass order extends Component {\r\n  constructor() {\r\n    super();\r\n    this.shipping = createRef();\r\n  }\r\n  state = {\r\n    selected: false,\r\n  };\r\n  componentWillUnmount() {\r\n    if (this.shipping.checked) this.props.substractShipping();\r\n  }\r\n\r\n  handleChecked = (e) => {\r\n    if (e.target.checked) {\r\n      this.props.addShipping();\r\n      console.log(this.props.total);\r\n    } else {\r\n      this.props.substractShipping();\r\n      console.log(this.props.total);\r\n    }\r\n  };\r\n  orderItems = () => {\r\n    this.setState({ selected: true });\r\n  };\r\n  handelTotalPrice(data) {\r\n    this.props.addTotalPrice(data);\r\n  }\r\n  async componentDidMount() {\r\n    localStorage.setItem(\"OrderItems\", JSON.stringify(this.props.addedItems));\r\n    let data = JSON.parse(localStorage.getItem(\"totalPrice\"));\r\n    this.handelTotalPrice(data);\r\n    // console.log(data);\r\n\r\n    // localStorage.setItem(\"totalPrice\",JSON.stringify(this.props.total));\r\n  }\r\n  async componentDidUpdate() {\r\n    // localStorage.setItem(\"priceTotal\", JSON.stringify(this.props.total));\r\n    // localStorage.setItem(\"priceTotal\", 0);\r\n  }\r\n\r\n  render() {\r\n    // console.log(this.props.addedItems);\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"collection\">\r\n          <li className=\"collection-item\">\r\n            <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                ref={this.shipping}\r\n                onChange={this.handleChecked}\r\n              />\r\n              <span>Shipping(+10$)</span>\r\n            </label>\r\n          </li>\r\n          <li className=\"collection-item\">\r\n            <b>Total: {this.props.total} $</b>\r\n            {/* {console.log(this.props)} */}\r\n          </li>\r\n        </div>\r\n        <div className=\"checkout\">\r\n          {/* {console.log()} */}\r\n          {this.props.addedItems.length ? (\r\n            <NavLink to=\"/addOrder\">\r\n              <button className=\"waves-effect waves-light btn\">Checkout</button>\r\n            </NavLink>\r\n          ) : (\r\n            <NavLink to=\"/\">\r\n              <button className=\"waves-effect waves-light btn\">Checkout</button>\r\n            </NavLink>\r\n          )}\r\n          {/* <NavLink to=\"/addOrder\"><button className=\"waves-effect waves-light btn\">Checkout</button></NavLink> */}\r\n          {/* <button className=\"waves-effect waves-light btn\" onClick={this.orderItems}>Checkout</button> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  // console.log(state);\r\n  return {\r\n    addedItems: state.addedItems,\r\n    total: state.total,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addShipping: () => {\r\n      dispatch({ type: \"ADD_SHIPPING\" });\r\n    },\r\n    substractShipping: () => {\r\n      dispatch({ type: \"SUB_SHIPPING\" });\r\n    },\r\n    addTotalPrice: (data) => {\r\n      dispatch(addTotalPrice(data));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(order);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../index.css\";\r\nimport {\r\n  removeItem,\r\n  addQuantity,\r\n  subtractQuantity,\r\n  addtoAddedItems,\r\n} from \"./actions/cartActions\";\r\nimport Order from \"./order\";\r\n\r\nclass Cart extends Component {\r\n  cardItem;\r\n\r\n  state = {\r\n    items: [],\r\n  };\r\n\r\n  //to remove the item completely\r\n  handleRemove = (id) => {\r\n    console.log(this.props);\r\n    this.props.removeItem(id);\r\n    // this.setState({items:this.props.items})\r\n  };\r\n  //to add the quantity\r\n  handleAddQuantity = (id) => {\r\n    this.props.addQuantity(id);\r\n  };\r\n  //to substruct from the quantity\r\n  handleSubtractQuantity = (id) => {\r\n    this.props.subtractQuantity(id);\r\n  };\r\n  handelAddedItems = (data) => {\r\n    this.props.addtoAddedItems(data);\r\n  };\r\n  // setData=()=>{\r\n  //     this.setState({items:this.props.items});\r\n  // }\r\n  // getData(){\r\n  //     return localStorage.getItem('cardItem');\r\n  //     // console.log(data);\r\n  // }\r\n\r\n  async componentDidMount() {\r\n    // localStorage.setItem(\"admincheck\",0);\r\n    // localStorage.setItem(\"AdminId\",0);\r\n    let data = JSON.parse(localStorage.getItem(\"addedItems\"));\r\n    this.handelAddedItems(data);\r\n    console.log(data);\r\n    // let pp = JSON.parse(localStorage.getItem('totalPrice'));\r\n\r\n    // console.log(pp);\r\n    // console.log(this.props.totalPrice);\r\n  }\r\n\r\n  // async componentDidUpdate(){\r\n  //     this.componentDidMount();\r\n  //     let data = JSON.parse(localStorage.getItem('card'));\r\n  //      console.log(data.length);\r\n  //     if(data.length === 0){\r\n  //                 console.log(\"2\");\r\n\r\n  //         // this.setState({ items: this.props.items });\r\n  //   }\r\n  //   else{\r\n  //     //    this.props.items = data;\r\n  //     console.log(data);\r\n  //   }\r\n  //     // console.log(\"1\");\r\n  //     // localStorage.setItem('card',JSON.stringify(this.props.items));\r\n  //   }\r\n\r\n  async componentDidUpdate() {\r\n    localStorage.setItem(\"addedItems\", JSON.stringify(this.props.items));\r\n    localStorage.setItem(\"totalPrice\", JSON.stringify(this.props.totalPrice));\r\n\r\n    console.log(this.props);\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props.items);\r\n    let addedItems = this.props.items.length ? (\r\n      this.props.items.map((item) => {\r\n        // let addedItems = data.length ?\r\n        // (\r\n        //     data.map(item=>{\r\n        return (\r\n          <li className=\"collection-item avatar\" key={item.idProducts}>\r\n            <div className=\"item-img\">\r\n              <img src={item.Image} alt={item.Image} />\r\n            </div>\r\n\r\n            <div className=\"item-desc\">\r\n              <span className=\"title\">{item.ProductsName}</span>\r\n              <p>{item.CategorName}</p>\r\n              <p>\r\n                <b>Price: {item.price * item.quantity}$</b>\r\n              </p>\r\n              <p>\r\n                <b>Quantity: {item.quantity}</b>\r\n              </p>\r\n              <div className=\"add-remove\">\r\n                <Link to=\"/cart\">\r\n                  <i\r\n                    className=\"material-icons\"\r\n                    onClick={() => {\r\n                      this.handleAddQuantity(item.idProducts);\r\n                    }}\r\n                  >\r\n                    arrow_drop_up\r\n                  </i>\r\n                </Link>\r\n                <Link to=\"/cart\">\r\n                  <i\r\n                    className=\"material-icons\"\r\n                    onClick={() => {\r\n                      this.handleSubtractQuantity(item.idProducts);\r\n                    }}\r\n                  >\r\n                    arrow_drop_down\r\n                  </i>\r\n                </Link>\r\n              </div>\r\n              <button\r\n                className=\"waves-effect waves-light btn pink remove\"\r\n                onClick={() => {\r\n                  this.handleRemove(item.idProducts);\r\n                }}\r\n              >\r\n                Remove\r\n              </button>\r\n            </div>\r\n          </li>\r\n        );\r\n      })\r\n    ) : (\r\n      <p>Nothing Found.</p>\r\n    );\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"cart\">\r\n          <h5>You have ordered:</h5>\r\n          <ul className=\"collection\">{addedItems}</ul>\r\n        </div>\r\n        <Order></Order>\r\n        {/* {console.log(this.state.items)} */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  // console.log(state.addedItems);\r\n  return {\r\n    items: state.addedItems,\r\n    totalPrice: state.total,\r\n    // items: JSON.parse(localStorage.getItem('cc'))\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    removeItem: (id) => {\r\n      dispatch(removeItem(id));\r\n    },\r\n    addQuantity: (id) => {\r\n      dispatch(addQuantity(id));\r\n    },\r\n    subtractQuantity: (id) => {\r\n      dispatch(subtractQuantity(id));\r\n    },\r\n    addtoAddedItems: (data) => {\r\n      dispatch(addtoAddedItems(data));\r\n    },\r\n    // setData: () =>{dispatch(setData())}\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport config from \"../server/config.json\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../index.css\";\r\n\r\nclass categor extends Component {\r\n  state = {\r\n    category: [],\r\n    isLoaded: true,\r\n  };\r\n  async componentDidMount() {\r\n    const { data: categories } = await axios.get(config.CategoryApi);\r\n    this.setState({ category: categories });\r\n    this.setState({ isLoaded: true });\r\n    // localStorage.setItem(\"admincheck\",0);\r\n    // localStorage.setItem(\"AdminId\",0);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"nav-wrapper navbar navbar-scroll\">\r\n        <div className=\"container\">\r\n          <ul className=\"center\">\r\n            <Link to=\"/react-shop\" className=\"catItems\">\r\n              <li>Home</li>\r\n            </Link>\r\n            {/* <div>Categories Available :  */}\r\n            {this.state.isLoaded &&\r\n              this.state.category.map((cat, index) => (\r\n                <Link to={\"/react-shop/\" + (index + 1)} className=\"catItems\">\r\n                  <li>{cat.categoriesName}</li>\r\n                </Link>\r\n              ))}\r\n            <li>\r\n              <Link className=\"AdminPannel\" to=\"/login\">\r\n                <span className=\"material-icons AdminPannel\">\r\n                  admin_panel_settings\r\n                </span>\r\n                Admin\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default categor;\r\n","import React, { Component } from 'react';\r\n// import Home from './Home';\r\n\r\nclass Main extends Component{\r\n\r\n    render(){\r\n        return(<h1>HI MAIN</h1>);\r\n    }\r\n}\r\n\r\nexport default Main;","import React from 'react'\r\nimport \"../index.css\";\r\n\r\n const MyInput = ({name,placeholder,type,label,error,onChange}) => {\r\n  //  console.log(value);\r\n        return (\r\n            <div className=\"form-group row\">\r\n            <label htmlFor={name} className=\"col-sm-2 col-form-label labelHead\">\r\n              {label}\r\n            </label>\r\n            <div className=\"col-sm-10\">\r\n              <input\r\n                type={type}\r\n                className=\"form-control\"\r\n                id={name}\r\n                placeholder={placeholder}\r\n                onChange={(evt) => onChange(evt)}\r\n                />\r\n              {error && (\r\n                <div className=\"alert alert-danger\"> Error Email</div>\r\n              )}\r\n              <br></br>\r\n            </div>\r\n          </div>\r\n        )\r\n}\r\nexport default MyInput;\r\n","import React, { Component } from \"react\";\r\nimport MyInput from \"./MyInput\";\r\nimport axios from \"axios\";\r\nimport config from \"../server/config.json\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n// import { NavLink } from \"react-router-dom\";\r\nimport \"../index.css\";\r\n// import { connect } from 'react-redux';\r\n\r\n\r\n// import {getStudent} from './Student';\r\n\r\nclass addOrder extends Component {\r\n  state = {\r\n    stu: [],\r\n    errors: {\r\n      userNameError: \"\",\r\n      emailError: \"\",\r\n      TelError: \"\",\r\n      PassError: \"\",\r\n    },\r\n    usr: {\r\n      Email: \"\",\r\n      Fname: \"\",\r\n      Lname: \"\",\r\n      city:\"\",\r\n      street:\"\",\r\n      password:\"\",\r\n      idUser:\"\",\r\n      Creadit:\"\"\r\n    },\r\n    addedItems:[],\r\n    item:{\r\n      quantity:\"\",\r\n      Tprice:\"\",\r\n      prodId:\"\",\r\n      cartId:\"\"\r\n    },\r\n    order:{\r\n      quantity:\"\",\r\n      price:\"\",\r\n      city:\"\",\r\n      street:\"\",\r\n      creadit:\"\"\r\n    },\r\n    isLodded : false\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // console.log(this.props.history);\r\n    // this.state.stu = getStudent();\r\n    // console.log({e});\r\n  };\r\n\r\n  handleChange=(evt)=>{\r\n    \r\n    const usr={ ...this.state.usr};\r\n    usr[evt.target.id]=evt.target.value;\r\n    this.setState({usr});\r\n    this.setState({isLodded:true})\r\n    console.log(this.state.usr);\r\n}\r\nhandleAdd=async ()=>{\r\n  console.log(this.state.usr.idUser);\r\n  // console.log(this.state.usr);\r\n  if(this.state.usr.idUser){\r\n    console.log(this.state.usr);\r\n    axios.post(config.UserApi,this.state.usr);\r\n    toast.success(\"New User Added Successfully\");\r\n\r\n  }\r\n  //// cardItems Post\r\n  if(this.state.addedItems.length>0){\r\n    for (let index = 0; index < this.state.addedItems.length; index++) {\r\n      this.state.item.quantity = this.state.addedItems[index].quantity;\r\n      this.state.item.Tprice = this.state.addedItems[index].price;\r\n      this.state.item.prodId = this.state.addedItems[index].idProducts;\r\n      this.state.item.cartId = this.state.usr.idUser;\r\n      // console.log(this.state.item);\r\n      axios.post(config.CartItemsApi,this.state.item);\r\n      toast.success(\"New Items Added Successfully\");\r\n\r\n    }}\r\n    ///// order post\r\n    if(this.state.usr.idUser && this.state.addedItems>0){\r\n      let price=0;\r\n      let qun =0;\r\n    for (let index = 0; index < this.state.addedItems.length; index++) {\r\n      qun += this.state.addedItems[index].quantity;\r\n      price += this.state.addedItems[index].price;\r\n    }\r\n    \r\n    this.state.order.quantity = qun.toString();\r\n    this.state.order.price = price.toString();\r\n    this.state.order.city = this.state.usr.city;\r\n    this.state.order.street = this.state.usr.street;\r\n    this.state.order.creadit = this.state.usr.Creadit;\r\n    console.log(this.state.order);\r\n    axios.post(config.OrderApi,this.state.order);\r\n    toast.success(\"New Order Added Successfully\");\r\n\r\n\r\n  }\r\n    // console.log(this.state.order);\r\n    // const { data: prods } = await axios.get(config.ProductApi);\r\n// window.location.replace('/home');\r\n\r\n}\r\nasync componentDidMount() {\r\n  let data = JSON.parse(localStorage.getItem('OrderItems'));\r\n  this.setState({addedItems:data});\r\n  let data1 = JSON.parse(localStorage.getItem('totalPrice'));\r\n\r\n  console.log(data);\r\n  console.log(data1);\r\n  // console.log(data);\r\n  // console.log(this.ps);\r\n  // const { data: UpdateUser } = await axios.get(config.serverApi +\"?id=\" + this.props.match.params.id);\r\n  // this.setState({ UpdateUser});\r\n  // this.setState({isLodded:true})\r\n  // console.log(this.state.UpdateUser);\r\n  // this.setState({ isLoaded: true });\r\n}\r\n// handelUpdateServe = () => {\r\n//   axios.put(config.serverApi + \"?id=\" + this.props.match.params.id,this.state.UpdateUser);\r\n//   toast.success(\"Updated Successfully\");\r\n\r\n// }\r\n  render() {\r\n   \r\n    return (\r\n      \r\n      <form className=\"OrderForm\" onSubmit={this.handleSubmit}>\r\n        <ToastContainer></ToastContainer>\r\n        <MyInput\r\n          name=\"idUser\"\r\n          type=\"text\"\r\n          placeholder=\"Enter your ID Number(9 Digits)\"\r\n          error={this.state.errors.userNameError}\r\n          label=\"ID#\"\r\n          onChange={this.handleChange}\r\n        ></MyInput>\r\n\r\n        <MyInput\r\n          name=\"Fname\"\r\n          type=\"text\"\r\n          placeholder=\"Enter Your First Name\"\r\n          error={this.state.errors.userNameError}\r\n          label=\"First Name\"\r\n          onChange={this.handleChange}\r\n        ></MyInput>\r\n\r\n        <MyInput\r\n          name=\"Lname\"\r\n          type=\"text\"\r\n          placeholder=\"Enter your Last Name\"\r\n          error={this.state.errors.emailError}\r\n          label=\"Last Name\"\r\n          onChange={this.handleChange}\r\n        ></MyInput>\r\n\r\n        {/* <MyInput\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Enter your Password\"\r\n          error={this.state.errors.emailError}\r\n          label=\"Password\"\r\n          onChange={this.handleChange}\r\n        ></MyInput> */}\r\n\r\n        <MyInput\r\n          name=\"Email\"\r\n          type=\"text\"\r\n          placeholder=\"Enter Your Email\"\r\n          error={this.state.errors.PassError}\r\n          label=\"Email\"\r\n          onChange={this.handleChange}\r\n        ></MyInput>\r\n\r\n        <MyInput\r\n          name=\"password\"\r\n          type=\"text\"\r\n          placeholder=\"Enter Your Telephone\"\r\n          error={this.state.errors.TelError}\r\n          label=\"Telephone\"\r\n          onChange={this.handleChange}\r\n        ></MyInput>\r\n\r\n          <MyInput\r\n          name=\"city\"\r\n          type=\"text\"\r\n          placeholder=\"Enter Your City\"\r\n          error={this.state.errors.TelError}\r\n          label=\"City\"\r\n          onChange={this.handleChange}\r\n        ></MyInput>\r\n\r\n          <MyInput\r\n          name=\"street\"\r\n          type=\"text\"\r\n          placeholder=\"Enter Your Street\"\r\n          error={this.state.errors.TelError}\r\n          label=\"Street\"\r\n          onChange={this.handleChange}\r\n        ></MyInput>\r\n\r\n        <MyInput\r\n          name=\"Creadit\"\r\n          type=\"text\"\r\n          placeholder=\"Enter Last 4 digits of your Creadit Card\"\r\n          error={this.state.errors.TelError}\r\n          label=\"Creadit Card\"\r\n          onChange={this.handleChange}\r\n        ></MyInput>\r\n\r\n        <h6><span>** Note: The order Dileverd after 2 weeks from Now</span></h6>\r\n\r\n        <div className=\"form-group row\">\r\n          <div className=\"col-sm-10\">\r\n          <button className=\"btn btn-success\" onClick={this.handleAdd} >Order</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\n// const mapStateToProps = (state)=>{\r\n//   // console.log(state);\r\n//   return{\r\n//       addedItems: state.addedItems,\r\n//       total: state.total\r\n//   }\r\n// }\r\n\r\n// const mapDispatchToProps = (dispatch)=>{\r\n//   return{\r\n    \r\n//   }\r\n// }\r\nexport default addOrder\r\n// connect(mapStateToProps,mapDispatchToProps)","import React, { Component } from \"react\";\r\nimport MyInput from \"./MyInput\";\r\nimport axios from \"axios\";\r\nimport config from \"../server/config.json\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../index.css\";\r\n// import routePage from \"./routePage\";\r\nimport { Redirect } from \"react-router-dom\";\r\n// import Admin from \"./Admin\";\r\n// import Admin from \"./Admin\";\r\n// import { useHistory } from \"react-router-dom\";\r\n\r\nclass login extends Component {\r\n  state = {\r\n      admin:{\r\n    idAdmin:\"\",\r\n    Email: \"\",\r\n    Password: \"\",\r\n    FirstName:\"\",\r\n    LastName:\"\"\r\n  },\r\n  usr:{\r\n    email:\"\",\r\n    pass:\"\"\r\n  },\r\n  errors: {\r\n    emailError: \"\",\r\n    PassError: \"\",\r\n  },\r\n  checked:0\r\n};\r\n  \r\nhandleChange=(evt)=>{\r\n    \r\n    const usr={ ...this.state.usr};\r\n    usr[evt.target.id]=evt.target.value;\r\n    this.setState({usr});\r\n    // this.setState({isLodded:true})\r\n    console.log(this.state.usr);\r\n}\r\nhandleAdd=async ()=>{\r\n    let data = this.state.admin[0];\r\n    if(data.Email === this.state.usr.email && data.Password === this.state.usr.pass){\r\n        // this.setState({checked:1});\r\n        localStorage.setItem(\"admincheck\",1);\r\n        localStorage.setItem(\"AdminId\",data.idAdmin);\r\n        window.location.reload(false);\r\n        // this.render();\r\n      }\r\n        else{\r\n            toast.error(\"You are not Admin please enter correct Email & Password\");\r\n\r\n        }\r\n    // console.log(this.state.admin.);\r\n    //   axios.post(config.UserApi,this.state.usr);\r\n    //   toast.success(\"New User Added Successfully\");\r\n  \r\n  }\r\n//   handleChange = (e) => {\r\n//     this.setState({ [e.currentTarget.id]: e.currentTarget.value });\r\n//   };\r\n\r\nasync componentDidMount() {\r\n    const { data: admins } = await axios.get(config.AdminApi);\r\n    this.setState({admin:admins});\r\n    // console.log(this.state.usr);\r\n}\r\n\r\n\r\n  render() {\r\n    // console.log(this.props);\r\n    let data = localStorage.getItem(\"AdminId\");\r\n    let check = localStorage.getItem(\"admincheck\");\r\n// console.log(check);\r\n    if(check === \"1\"){\r\n        return(\r\n        <Redirect to={\"/admin/\" + data} />\r\n        )\r\n       }\r\nelse{\r\n    return (\r\n      <div className=\"loginForm\">\r\n        <ToastContainer></ToastContainer>\r\n        <MyInput\r\n          name=\"email\"\r\n          type=\"text\"\r\n          placeholder=\"Enter your Email\"\r\n          error={this.state.errors.emailError}\r\n          label=\"Email\"\r\n          onChange={this.handleChange}\r\n        ></MyInput>\r\n\r\n        <MyInput\r\n          name=\"pass\"\r\n          type=\"password\"\r\n          placeholder=\"Enter your Password\"\r\n          error={this.state.errors.PassError}\r\n          label=\"Password\"\r\n          onChange={this.handleChange}\r\n        ></MyInput>\r\n\r\n        <div className=\"form-group row\">\r\n          <div className=\"col-sm-10\">\r\n          <button className=\"btn btn-success\" onClick={this.handleAdd} >Login</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }}\r\n}\r\n\r\nexport default login;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport config from \"../server/config.json\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../index.css\";\r\n\r\n\r\nfunction shuffle(array) {\r\n  var currentIndex = array.length,\r\n    temporaryValue,\r\n    randomIndex;\r\n\r\n  // While there remain elements to shuffle...\r\n  while (0 !== currentIndex) {\r\n    // Pick a remaining element...\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex -= 1;\r\n\r\n    // And swap it with the current element.\r\n    temporaryValue = array[currentIndex];\r\n    array[currentIndex] = array[randomIndex];\r\n    array[randomIndex] = temporaryValue;\r\n  }\r\n\r\n  return array;\r\n}\r\n\r\nclass Admin extends Component {\r\n  state = {\r\n    AdminID: 0,\r\n    selected: \"\",\r\n    products: [],\r\n    categories: [],\r\n  };\r\n  async componentDidMount() {\r\n    const { data: admins } = await axios.get(config.AdminApi);\r\n    this.setState({ AdminID: admins[0].idAdmin });\r\n    // console.log(this.state.AdminID);\r\n  }\r\n  handleOpen = async (selected) => {\r\n    if (selected === \"1\") {\r\n      const { data: prods } = await axios.get(config.ProductApi);\r\n      this.setState({ selected: \"1\" });\r\n      this.setState({ products: shuffle(prods) });\r\n      console.log(this.state.products);\r\n    } else if (selected === \"2\") {\r\n      const { data: cats } = await axios.get(config.CategoryApi);\r\n      this.setState({ selected: \"2\" });\r\n      this.setState({ categories: cats });\r\n    }\r\n  }\r\n\r\n  handleLogOut = () =>{\r\n        localStorage.setItem(\"admincheck\",0);\r\n        localStorage.setItem(\"AdminId\",0);\r\n        this.handleOpen(\"1\");\r\n  }\r\n  deleteProd =async (id)=>{\r\n    axios.delete(config.ProductApi + \"?id=\" + id);\r\n    toast.success(\"Product Deleted Successfully\");\r\n    window.location.reload(false);\r\n    // this.handleOpen(\"1\");\r\n\r\n  }\r\n  deleteCat = async (id)=>{\r\n    axios.delete(config.CategoryApi + \"?id=\" + id);\r\n    toast.success(\"Category Deleted Successfully\");\r\n    window.location.reload(false);\r\n    // this.handleOpen(\"2\");\r\n  }\r\n  render() {\r\n      let d = localStorage.getItem(\"AdminId\");\r\n      if(d === \"0\")\r\n      return(\r\n        <Redirect to={\"/login\"} />\r\n      )\r\n\r\n    if (this.props.match.params.id === this.state.AdminID) {\r\n      if (this.state.selected === \"1\") {\r\n        return (\r\n            <div>\r\n              <ToastContainer></ToastContainer>\r\n            <button className=\"logout button3\" onClick={this.handleLogOut}>\r\n            Logout<span class=\"material-icons\">logout</span>\r\n          </button>\r\n          <div className=\"grid-container\">\r\n            <div className=\"sideMenu\">\r\n              <ul>\r\n                <li>\r\n                  <button\r\n                    className=\"button1\"\r\n                    onClick={() => {\r\n                      this.handleOpen(\"1\");\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    Show Products\r\n                  </button>\r\n                </li>\r\n                <br></br>\r\n                <li>\r\n                  <button\r\n                    className=\"button2\"\r\n                    onClick={() => {\r\n                      this.handleOpen(\"2\");\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    Show Categories\r\n                  </button>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"MainContent\">\r\n             <NavLink to=\"/addProduct\"><button className=\"button2\">Add Product</button></NavLink>\r\n              <table className=\"tablee\">\r\n                <thead>\r\n                  <tr className=\"table-infoo\">\r\n                    <th>#</th>\r\n                    <th>ProductName</th>\r\n                    <th>Price</th>\r\n                    <th>CategoryName</th>\r\n                    <th>Image</th>\r\n                    <th>Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.state.products.map((prod, index) => (\r\n                    <tr className=\"table-infoo\" key={index}>\r\n                      <td>{index+1}</td>\r\n                      <td>{prod.ProductsName}</td>\r\n                      <td>{prod.price}</td>\r\n                      <td>{prod.CategorName}</td>\r\n                      <td>\r\n                        <img\r\n                          className=\"imgAdmin\"\r\n                          src={prod.Image}\r\n                          alt={prod.Image}\r\n                        ></img>\r\n                      </td>\r\n\r\n                      <td>\r\n                        <input\r\n                          className=\"button3\"\r\n                          type=\"button\"\r\n                          value=\"delete\"\r\n                          onClick={() => this.deleteProd(prod.idProducts)}\r\n                        />&nbsp;\r\n                            <NavLink className=\"upd\" to={'/addProduct/' + prod.idProducts }><button className=\"button1\">\r\n                      Update\r\n                      </button></NavLink>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      } else if (this.state.selected === \"2\") {\r\n        return (\r\n<div>\r\n<ToastContainer></ToastContainer>\r\n\r\n            <button className=\"logout button3\" onClick={this.handleLogOut}>\r\n            Logout<span class=\"material-icons\">logout</span>\r\n          </button>\r\n          <div className=\"grid-container\">\r\n            <div className=\"sideMenu\">\r\n              <ul>\r\n                <li>\r\n                  <button\r\n                    className=\"button1\"\r\n                    onClick={() => {\r\n                      this.handleOpen(\"1\");\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    Show Products\r\n                  </button>\r\n                </li>\r\n                <br></br>\r\n                <li>\r\n                  <button\r\n                    className=\"button2\"\r\n                    onClick={() => {\r\n                      this.handleOpen(\"2\");\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    Show Categories\r\n                  </button>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"MainContent\">\r\n             <NavLink to=\"/addCategory\"><button className=\"button2\">Add Product</button></NavLink>\r\n              <table className=\"tablee\">\r\n                <thead>\r\n                  <tr className=\"table-infoo\">\r\n                    <th>#</th>\r\n                    <th>CategoryName</th>\r\n                    <th>Image</th>\r\n                    <th>Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.state.categories.map((cat, index) => (\r\n                    <tr className=\"table-infoo\" key={index}>\r\n                      <td>{index+1}</td>\r\n                      <td>{cat.categoriesName}</td>\r\n                      {/* <td>{cat.price}</td> */}\r\n                      <td>\r\n                        <img\r\n                          className=\"imgAdmin\"\r\n                          src={cat.catImage}\r\n                          alt={cat.catImage}\r\n                        ></img>\r\n                      </td>\r\n\r\n                      <td>\r\n                        <input\r\n                          className=\"button3\"\r\n                          type=\"button\"\r\n                          value=\"delete\"\r\n                          onClick={() => this.deleteCat(cat.idCategories)}\r\n                        />&nbsp;\r\n                        <NavLink className=\"upd\" to={'/addCategory/' + cat.idCategories  }><button className=\"button1\">\r\n                      Update\r\n                      </button></NavLink>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            </div>\r\n          </div>\r\n          \r\n        );\r\n      } else\r\n        return (\r\n            <div>\r\n                            <ToastContainer></ToastContainer>\r\n\r\n                  <button className=\"logout button3\" onClick={this.handleLogOut}>\r\n              Logout<span class=\"material-icons\">logout</span>\r\n            </button>\r\n            \r\n            <div className=\"grid-container\">\r\n            <div className=\"sideMenu\">\r\n              <ul>\r\n                <li>\r\n                  <button\r\n                    className=\"button1\"\r\n                    onClick={() => {\r\n                      this.handleOpen(\"1\");\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    Show Products\r\n                  </button>\r\n                </li>\r\n                <br></br>\r\n                <li>\r\n                  <button\r\n                    className=\"button2\"\r\n                    onClick={() => {\r\n                      this.handleOpen(\"2\");\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    Show Categories\r\n                  </button>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"MainContent\">\r\n                <h1>Here Admin Can See All Products And Categories in the Shop And Make Changes to them</h1>\r\n                </div>\r\n              {/* <button className=\"button2\">Add Product</button>\r\n              <table className=\"tablee\">\r\n                <thead>\r\n                  <tr className=\"table-infoo\">\r\n                    <th>#</th>\r\n                    <th>ProductName</th>\r\n                    <th>Price</th>\r\n                    <th>CategoryName</th>\r\n                    <th>Image</th>\r\n                    <th>Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.state.products.map((prod, index) => (\r\n                    <tr className=\"table-infoo\" key={index}>\r\n                      <td>{index}</td>\r\n                      <td>{prod.ProductsName}</td>\r\n                      <td>{prod.price}</td>\r\n                      <td>{prod.CategorName}</td>\r\n                      <td>\r\n                        <img\r\n                          className=\"imgAdmin\"\r\n                          src={prod.Image}\r\n                          alt={prod.Image}\r\n                        ></img>\r\n                      </td>\r\n\r\n                      <td>\r\n                        <input\r\n                          className=\"button3\"\r\n                          type=\"button\"\r\n                          value=\"delete\"\r\n                          // onClick={() => this.deleteStu(index)}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table> */}\r\n            {/* </div> */}\r\n          </div>\r\n          </div>\r\n        );\r\n    } else return <h1>You Are Not allowed To acces This Page</h1>;\r\n  }\r\n}\r\n\r\nexport default Admin;\r\n","import React, { Component } from \"react\";\r\nimport MyInput from \"./MyInput\";\r\nimport axios from \"axios\";\r\nimport config from \"../server/config.json\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n// import { NavLink } from \"react-router-dom\";\r\nimport \"../index.css\";\r\n// import { connect } from 'react-redux';\r\n\r\n\r\n// import {getStudent} from './Student';\r\n\r\nclass addProduct extends Component {\r\n  state = {\r\n    prod: [],\r\n    errors: {\r\n      ProNameError: \"\",\r\n      PricelError: \"\",\r\n      ImgError: \"\",\r\n      CatError: \"\",\r\n    },\r\n    product: {\r\n        ProName: \"\",\r\n        price: \"\",\r\n        image: \"\",\r\n        catName:\"\",\r\n    },\r\n    category:[],\r\n    isLodded : false,\r\n    selectValue:\"\",\r\n    UpdateProduct:{\r\n        idProducts:\"\",\r\n        ProductsName:\"\",\r\n        price:\"\",\r\n        Image:\"\",\r\n        CategoryId:\"\",\r\n        CategorName:\"\"\r\n    }\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // console.log(this.props.history);\r\n    // this.state.stu = getStudent();\r\n    // console.log({e});\r\n  };\r\n\r\n  handleChange=(evt)=>{\r\n    \r\n    const product={ ...this.state.product};\r\n    product[evt.target.id]=evt.target.value;\r\n    this.setState({product});\r\n    this.setState({isLodded:true})\r\n    \r\n    // console.log(this.state.product);\r\n}\r\nhandleAdd=async ()=>{\r\n  console.log(this.state.product);\r\n    axios.post(config.ProductApi,this.state.product);\r\n    toast.success(\"Product Added Successfully\");\r\n\r\n}\r\n\r\nhandleUpdate=async ()=>{\r\n    console.log(this.state.product);\r\n      axios.put(config.ProductApi + \"?id=\" + this.props.match.params.id,this.state.product);\r\n      toast.success(\"Product Updated Successfully\");\r\n  \r\n  }\r\nasync componentDidMount() {\r\n    const { data: categories } = await axios.get(config.CategoryApi);\r\n    this.setState({category:categories});\r\n    const { data: prods } = await axios.get(config.ProductApi);\r\n    this.setState({prod:prods});\r\n    let upd = this.state.prod.find(item=> item.idProducts === this.props.match.params.id);\r\n    this.setState({UpdateProduct:upd});\r\n\r\n}\r\ncomponentDidUpdate(){\r\n    // var select2 = document.querySelectorAll('select');\r\n    // var instances = M.FormSelect.init(select2);\r\n// console.log(\"select2\");\r\n}\r\n// handelUpdateServe = () => {\r\n//   axios.put(config.serverApi + \"?id=\" + this.props.match.params.id,this.state.UpdateUser);\r\n//   toast.success(\"Updated Successfully\");\r\n\r\n// }\r\n  render() {\r\nif(this.props.match.params.id){\r\n    return (\r\n      \r\n        <form className=\"OrderForm\" onSubmit={this.handleSubmit}>\r\n          <ToastContainer></ToastContainer>\r\n          <MyInput\r\n            name=\"ProName\"\r\n            type=\"text\"\r\n            placeholder={this.state.UpdateProduct.ProductsName}\r\n            error={this.state.errors.ProNameError}\r\n            label=\"Product Name\"\r\n            onChange={this.handleChange}\r\n          ></MyInput>\r\n  \r\n          <MyInput\r\n            name=\"price\"\r\n            type=\"text\"\r\n            placeholder={this.state.UpdateProduct.price}\r\n            error={this.state.errors.PricelError}\r\n            label=\"Price\"\r\n            onChange={this.handleChange}\r\n          ></MyInput>\r\n  \r\n          <MyInput\r\n            name=\"image\"\r\n            type=\"text\"\r\n            placeholder={this.state.UpdateProduct.Image}\r\n            // value={this.state.UpdateProduct.Image}\r\n            error={this.state.errors.ImgError}\r\n            label=\"Image\"\r\n            onChange={this.handleChange}\r\n          ></MyInput>\r\n          <label>Categoy Select</label>\r\n    <select id=\"catName\" class=\"browser-default\" onChange={this.handleChange}>\r\n      <option value=\"\" disabled selected>{this.state.UpdateProduct.CategorName}</option>\r\n      {this.state.category.map((cat)=>(\r\n              <option value={cat.categoriesName}>{cat.categoriesName}</option>\r\n  \r\n      ))}\r\n    </select>\r\n    <br></br>\r\n  \r\n          <div className=\"form-group row\">\r\n            <div className=\"col-sm-10\">\r\n            <button className=\"btn btn-success\" onClick={this.handleUpdate} >Update Product</button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      );\r\n}\r\n   else{\r\n    return (\r\n      \r\n      <form className=\"OrderForm\" onSubmit={this.handleSubmit}>\r\n        <ToastContainer></ToastContainer>\r\n        <MyInput\r\n          name=\"ProName\"\r\n          type=\"text\"\r\n          placeholder=\"Enter Product Name\"\r\n          error={this.state.errors.ProNameError}\r\n          label=\"Product Name\"\r\n          onChange={this.handleChange}\r\n        ></MyInput>\r\n\r\n        <MyInput\r\n          name=\"price\"\r\n          type=\"text\"\r\n          placeholder=\"Enter Product Price\"\r\n          error={this.state.errors.PricelError}\r\n          label=\"Price\"\r\n          onChange={this.handleChange}\r\n        ></MyInput>\r\n\r\n        <MyInput\r\n          name=\"image\"\r\n          type=\"text\"\r\n          placeholder=\"Enter URL of Image\"\r\n          error={this.state.errors.ImgError}\r\n          label=\"Image\"\r\n          onChange={this.handleChange}\r\n        ></MyInput>\r\n        <label>Categoy Select</label>\r\n  <select id=\"catName\" class=\"browser-default\" onChange={this.handleChange}>\r\n    <option value=\"\" disabled selected>Choose your option</option>\r\n    {this.state.category.map((cat)=>(\r\n            <option value={cat.categoriesName}>{cat.categoriesName}</option>\r\n\r\n    ))}\r\n  </select>\r\n  <br></br>\r\n\r\n        <div className=\"form-group row\">\r\n          <div className=\"col-sm-10\">\r\n          <button className=\"btn btn-success\" onClick={this.handleAdd} >ADD Product</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n}\r\n  }\r\n}\r\n\r\n\r\nexport default addProduct\r\n// connect(mapStateToProps,mapDispatchToProps)","import React, { Component } from \"react\";\r\nimport MyInput from \"./MyInput\";\r\nimport axios from \"axios\";\r\nimport config from \"../server/config.json\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n// import { NavLink } from \"react-router-dom\";\r\nimport \"../index.css\";\r\n// import { connect } from 'react-redux';\r\n\r\n\r\n// import {getStudent} from './Student';\r\n\r\nclass addCategory extends Component {\r\n  state = {\r\n    prod: [],\r\n    errors: {\r\n      ProNameError: \"\",\r\n      PricelError: \"\",\r\n\r\n    },\r\n    categoryee: {\r\n      cName:\"\",\r\n      Image:\"\"\r\n    },\r\n    category:[],\r\n    isLodded : false,\r\n    selectValue:\"\",\r\n    UpdateCat:{\r\n        idCategories :\"\",\r\n        categoriesName:\"\",\r\n        catImage:\"\"\r\n    }\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // console.log(this.props.history);\r\n    // this.state.stu = getStudent();\r\n    // console.log({e});\r\n  };\r\n\r\n  handleChange=(evt)=>{\r\n    \r\n    const categoryee={ ...this.state.categoryee};\r\n    categoryee[evt.target.id]=evt.target.value;\r\n    this.setState({categoryee});\r\n    this.setState({isLodded:true})\r\n    \r\n    // console.log(this.state.product);\r\n}\r\nhandleAdd=async ()=>{\r\n  console.log(this.state.categoryee);\r\n    axios.post(config.CategoryApi,this.state.categoryee);\r\n    toast.success(\"Product Added Successfully\");\r\n\r\n}\r\n\r\nhandleUpdate=async ()=>{\r\n    console.log(this.state.categoryee);\r\n      axios.put(config.CategoryApi + \"?id=\" + this.props.match.params.id,this.state.categoryee);\r\n      toast.success(\"Product Updated Successfully\");\r\n  \r\n  }\r\nasync componentDidMount() {\r\n    const { data: categories } = await axios.get(config.CategoryApi);\r\n    this.setState({category:categories});\r\n    let upd = this.state.category.find(item=> item.idCategories === this.props.match.params.id);\r\n    this.setState({UpdateCat:upd});\r\n\r\n}\r\ncomponentDidUpdate(){\r\n    // var select2 = document.querySelectorAll('select');\r\n    // var instances = M.FormSelect.init(select2);\r\n// console.log(\"select2\");\r\n}\r\n// handelUpdateServe = () => {\r\n//   axios.put(config.serverApi + \"?id=\" + this.props.match.params.id,this.state.UpdateUser);\r\n//   toast.success(\"Updated Successfully\");\r\n\r\n// }\r\n  render() {\r\nif(this.props.match.params.id){\r\n    return (\r\n      \r\n        <form className=\"OrderForm\" onSubmit={this.handleSubmit}>\r\n          <ToastContainer></ToastContainer>\r\n          <MyInput\r\n            name=\"cName\"\r\n            type=\"text\"\r\n            placeholder={this.state.UpdateCat.categoriesName}\r\n            error={this.state.errors.ProNameError}\r\n            label=\"Product Name\"\r\n            onChange={this.handleChange}\r\n          ></MyInput>\r\n  \r\n          <MyInput\r\n            name=\"Image\"\r\n            type=\"text\"\r\n            placeholder={this.state.UpdateCat.catImage}\r\n            error={this.state.errors.PricelError}\r\n            label=\"Price\"\r\n            onChange={this.handleChange}\r\n          ></MyInput>\r\n  \r\n          \r\n    <br></br>\r\n  \r\n          <div className=\"form-group row\">\r\n            <div className=\"col-sm-10\">\r\n            <button className=\"btn btn-success\" onClick={this.handleUpdate} >Update Category</button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      );\r\n}\r\n   else{\r\n    return (\r\n      \r\n        <form className=\"OrderForm\" onSubmit={this.handleSubmit}>\r\n        <ToastContainer></ToastContainer>\r\n        <MyInput\r\n          name=\"cName\"\r\n          type=\"text\"\r\n          placeholder=\"Enter Category Name\"\r\n          error={this.state.errors.ProNameError}\r\n          label=\"Categor Name\"\r\n          onChange={this.handleChange}\r\n        ></MyInput>\r\n\r\n        <MyInput\r\n          name=\"Image\"\r\n          type=\"text\"\r\n          placeholder=\"Enter URL Image\"\r\n          error={this.state.errors.PricelError}\r\n          label=\"Image\"\r\n          onChange={this.handleChange}\r\n        ></MyInput>\r\n\r\n        \r\n  <br></br>\r\n\r\n        <div className=\"form-group row\">\r\n          <div className=\"col-sm-10\">\r\n          <button className=\"btn btn-success\" onClick={this.handleAdd} >Add Category</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n}\r\n  }\r\n}\r\n\r\n\r\nexport default addCategory\r\n// connect(mapStateToProps,mapDispatchToProps)","// import logo from './logo.svg';\n// import './App.css';\nimport Nav from \"./components/Navbar\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport NotFound from \"./components/NotFound\";\n// import React, { Component } from 'react';\nimport React from \"react\";\nimport Home from \"./components/Home\";\nimport Cart from \"./components/Cart\";\nimport Category from \"./components/category\";\nimport Main from \"./components/Main\";\nimport addOrder from \"./components/addOrder\";\nimport login from \"./components/login\";\nimport Admin from \"./components/Admin\";\nimport addProduct from \"./components/addProduct\";\nimport addCategory from \"./components/addCategory\";\nfunction App() {\n  return (\n    <React.Fragment>\n      <BrowserRouter>\n        <div className=\"App\">\n          <Nav></Nav>\n          <Category></Category>\n          <Switch>\n            <Route path=\"/Main\" component={Main}></Route>\n            <Route path=\"/login\" component={login}></Route>\n            <Route path=\"/addCategory/:id\" component={addCategory}></Route>\n            <Route path=\"/addCategory\" component={addCategory}></Route>\n            <Route path=\"/addProduct/:id\" component={addProduct}></Route>\n            <Route path=\"/addProduct\" component={addProduct}></Route>\n            <Route path=\"/admin/:id\" component={Admin}></Route>\n            <Route path=\"/react-shop/:id\" component={Home} />\n            <Route path=\"/react-shop\" component={Home} />\n            <Route path=\"/addOrder\" component={addOrder} />\n            <Route path=\"/cart\" component={Cart} />\n            <Route path=\"/not-found\" component={NotFound} />\n            <Redirect from=\"/\" exact to=\"/react-shop\" />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// const fromDb = null;\r\n\r\n// // ✅ Provide empty array as fallback\r\n// const arr = fromDb || [];\r\n// const ex4 = (arr || []).length;\r\nconst initState = {\r\n  items: [],\r\n  addedItems: [],\r\n  total: 0,\r\n};\r\nfunction shuffle(array) {\r\n  var currentIndex = array.length,\r\n    temporaryValue,\r\n    randomIndex;\r\n\r\n  // While there remain elements to shuffle...\r\n  while (0 !== currentIndex) {\r\n    // Pick a remaining element...\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex -= 1;\r\n\r\n    // And swap it with the current element.\r\n    temporaryValue = array[currentIndex];\r\n    array[currentIndex] = array[randomIndex];\r\n    array[randomIndex] = temporaryValue;\r\n  }\r\n\r\n  return array;\r\n}\r\n// localStorage.setItem('tt',JSON.stringify(initState.addedItems));\r\nconst cartReducer = (state = initState, action) => {\r\n  if (action.type === \"ADD_TO_ADDEDITEMS\") {\r\n    // console.log(action.data);\r\n    // let s = state.items.push(action.data);\r\n    state.addedItems = action.data;\r\n    // console.log(state.items);\r\n    return {\r\n      ...state,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"ADD_TO_ITEMS\") {\r\n    // console.log(action.data);\r\n    // let s = state.items.push(action.data);\r\n    state.items = action.data;\r\n    shuffle(state.items);\r\n    // console.log(state.items);\r\n    return {\r\n      ...state,\r\n    };\r\n  }\r\n  if (action.type === \"ADD_TO_TOTALPRICE\") {\r\n    state.total = action.data;\r\n    return {\r\n      ...state,\r\n    };\r\n  }\r\n\r\n  //INSIDE HOME COMPONENT\r\n  if (action.type === \"ADD_TO_CART\") {\r\n    // console.log(state.items);\r\n    // console.log(action.id);\r\n    if (document.getElementById(state.items.idProducts)) {\r\n      return {\r\n        ...state,\r\n        total: state.total,\r\n      };\r\n    }\r\n    let addedItem = state.items.find((item) => item.idProducts === action.id);\r\n    addedItem.price = Number.parseInt(addedItem.price);\r\n    //check if the action id exists in the addedItems\r\n    // if (state.addedItems === null) {\r\n    //   console.log(\"hhh\");\r\n    //   addedItem.quantity = 1;\r\n    //   let newTotal = state.total + addedItem.price;\r\n    //   return {\r\n    //     ...state,\r\n    //     addedItems: [...state.addedItems, addedItem],\r\n    //     total: newTotal,\r\n    //   };\r\n    // } else {\r\n    //   let existed_item = state.addedItems.find(\r\n    //     (item) => action.id === item.idProducts\r\n    //   );\r\n    //   if (existed_item) {\r\n    //     existed_item.quantity += 1;\r\n    //     // localStorage.setItem('cardAdded',JSON.stringify());\r\n    //     return {\r\n    //       ...state,\r\n    //       total: state.total + existed_item.price,\r\n    //     };\r\n    //   }\r\n    // }\r\n    // if (state.addedItems === []) console.log(\"sadadsad\");\r\n    let existed_item = state.addedItems.find(\r\n      (item) => action.id === item.idProducts\r\n    );\r\n    if (existed_item) {\r\n      existed_item.quantity += 1;\r\n      // localStorage.setItem('cardAdded',JSON.stringify());\r\n      return {\r\n        ...state,\r\n        total: state.total + existed_item.price,\r\n      };\r\n    } else {\r\n      addedItem.quantity = 1;\r\n      //calculating the total\r\n      //   localStorage.setItem('cardAdded',JSON.stringify(addedItem));\r\n      // localStorage.setItem('cardAdded',JSON.stringify([...state.addedItems, addedItem]));\r\n      let newTotal = state.total + addedItem.price;\r\n\r\n      return {\r\n        ...state,\r\n        addedItems: [...state.addedItems, addedItem],\r\n        total: newTotal,\r\n      };\r\n    }\r\n  }\r\n  if (action.type === \"REMOVE_ITEM\") {\r\n    let itemToRemove = state.addedItems.find(\r\n      (item) => action.id === item.idProducts\r\n    );\r\n    let new_items = state.addedItems.filter(\r\n      (item) => action.id !== item.idProducts\r\n    );\r\n    // itemToRemove.price = Number.parseInt(itemToRemove.price);\r\n    // console.log(itemToRemove);\r\n\r\n    //calculating the total\r\n    console.log(state.total);\r\n\r\n    let newTotal = state.total - itemToRemove.price * itemToRemove.quantity;\r\n    if (newTotal === 10) {\r\n      //   console.log(state.total);\r\n      newTotal = 0;\r\n    }\r\n    return {\r\n      ...state,\r\n      addedItems: new_items,\r\n      total: newTotal,\r\n    };\r\n  }\r\n  //INSIDE CART COMPONENT\r\n  if (action.type === \"ADD_QUANTITY\") {\r\n    console.log(state.addedItems);\r\n    // console.log(action.id);\r\n    let addedItem = state.addedItems.find(\r\n      (item) => item.idProducts === action.id\r\n    );\r\n    // console.log(addedItem);\r\n    // console.log(addedItem.quantity);\r\n    addedItem.quantity += 1;\r\n    //   console.log(addedItem);\r\n    let newTotal = state.total + addedItem.price;\r\n    return {\r\n      ...state,\r\n      total: newTotal,\r\n    };\r\n  }\r\n  if (action.type === \"SUB_QUANTITY\") {\r\n    let addedItem = state.addedItems.find(\r\n      (item) => item.idProducts === action.id\r\n    );\r\n    //if the qt == 0 then it should be removed\r\n    if (addedItem.quantity === 1) {\r\n      let new_items = state.addedItems.filter(\r\n        (item) => item.idProducts !== action.id\r\n      );\r\n      let newTotal = state.total - addedItem.price;\r\n      return {\r\n        ...state,\r\n        addedItems: new_items,\r\n        total: newTotal,\r\n      };\r\n    } else {\r\n      addedItem.quantity -= 1;\r\n      let newTotal = state.total - addedItem.price;\r\n      return {\r\n        ...state,\r\n        total: newTotal,\r\n      };\r\n    }\r\n  }\r\n\r\n  if (action.type === \"ADD_SHIPPING\") {\r\n    return {\r\n      ...state,\r\n      total: state.total + 10,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"SUB_SHIPPING\") {\r\n    return {\r\n      ...state,\r\n      total: state.total - 10,\r\n    };\r\n  } else {\r\n    return state;\r\n  }\r\n};\r\n\r\nexport default cartReducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport cartReducer from './components/reducers/cartReducer';\n\nconst store = createStore(cartReducer);\n\nReactDOM.render(<Provider store={store}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}